generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int            @id @default(autoincrement())
  instagram_user_id String         @unique
  username          String
  full_name         String?
  profile_picture   String?
  access_token      String
  long_lived_token  String?
  token_expires_at  DateTime?
  posts_count       Int?
  followers_count   Int?
  following_count   Int?
  created_at        DateTime       @default(now())
  updated_at        DateTime       @updatedAt
  api_key           String         @unique @default(uuid())
  payments          Payment[]
  subscriptions     Subscription[]
}

model Subscription {
  id              Int       @id @default(autoincrement())
  user_id         Int
  status          String
  plan_type       String
  trial_ends_at   DateTime?
  starts_at       DateTime  @default(now())
  ends_at         DateTime?
  mercado_pago_id String?
  last_payment_id Int?
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  payments        Payment[]
  user            User      @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model Payment {
  id              Int          @id @default(autoincrement())
  user_id         Int
  subscription_id Int
  amount          Float
  currency        String
  status          String
  mercado_pago_id String
  payment_method  String
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  subscription    Subscription @relation(fields: [subscription_id], references: [id], onDelete: Cascade)
  user            User         @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@index([subscription_id])
}
