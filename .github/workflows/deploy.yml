name: Deploy to EasyPanel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub (opcional)
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build Backend Image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: false
        tags: getmyinstatoken-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build Frontend Image  
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: false
        tags: getmyinstatoken-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test Backend
      run: |
        docker run --rm -d --name test-backend \
          -e NODE_ENV=test \
          -e DATABASE_URL=postgresql://test:test@localhost:5432/test \
          getmyinstatoken-backend:latest
        sleep 5
        docker exec test-backend curl -f http://localhost:5000/health || exit 1
        docker stop test-backend
    
    # Deploy automático para EasyPanel (opcional)
    # - name: Deploy to EasyPanel
    #   run: |
    #     # Aqui você pode adicionar comandos para deploy automático
    #     # usando a API do EasyPanel ou webhooks
    #     echo "Deploy to EasyPanel here"
